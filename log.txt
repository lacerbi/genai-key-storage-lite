Run npm test

> genai-key-storage-lite@0.1.0 test
> jest

PASS src/main/ipc.test.ts (6.28 s)
  ● Console

    console.log
      Secure API key IPC handlers registered

      at registerSecureApiKeyIpc (src/main/ipc.ts:96:11)

PASS src/renderer/ApiKeyServiceRenderer.test.ts (6.465 s)
PASS src/common/providers/ProviderService.test.ts
PASS src/preload/index.test.ts
PASS src/common/providers/MistralProvider.test.ts
PASS src/common/providers/GeminiProvider.test.ts
FAIL src/main/ApiKeyServiceMain.test.ts (7.591 s)
  ● Console

    console.log
      Found 0 encrypted API key files

      at ApiKeyServiceMain.loadAllKeysFromDisk (src/main/ApiKeyServiceMain.ts:246:15)

    console.log
      Successfully loaded metadata for 0 API keys

      at ApiKeyServiceMain.loadAllKeysFromDisk (src/main/ApiKeyServiceMain.ts:277:15)

    console.log
      Found 0 encrypted API key files

      at ApiKeyServiceMain.loadAllKeysFromDisk (src/main/ApiKeyServiceMain.ts:246:15)

    console.log
      Successfully loaded metadata for 0 API keys

      at ApiKeyServiceMain.loadAllKeysFromDisk (src/main/ApiKeyServiceMain.ts:277:15)

    console.log
      API key stored successfully for provider: openai

      at ApiKeyServiceMain.storeKey (src/main/ApiKeyServiceMain.ts:98:15)
      117 |

      at Object.<anonymous> (src/main/ApiKeyServiceMain.test.ts:114:39)

  ● ApiKeyServiceMain › isKeyStored › should return true if key file exists on disk but not in memory

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/mock/user/data/secure_api_keys/openai.json"
    Received: "\\mock\\user\\data\\secure_api_keys\\openai.json"

    Number of calls: 1

      147 |       mockedFsPromises.readFile.mockResolvedValue(JSON.stringify({ lastFourChars: 'yyyy' }));
      148 |       await expect(service.isKeyStored('openai')).resolves.toBe(true);
    > 149 |       expect(mockedFsPromises.access).toHaveBeenCalledWith(`${mockUserDataPath}/secure_api_keys/openai.json`);
          |                                       ^
      150 |     });
      151 |
      152 |     it('should return false if key is not in memory and file does not exist', async () => {

      at Object.<anonymous> (src/main/ApiKeyServiceMain.test.ts:149:39)

  ● ApiKeyServiceMain › validateAndGetSecurePath › should return valid path for legitimate provider ID

    expect(received).toBe(expected) // Object.is equality

    Expected: "/mock/user/data/secure_api_keys/openai.json"
    Received: "\\mock\\user\\data\\secure_api_keys\\openai.json"

      288 |       const validProviderId = 'openai';
      289 |       const result = internalService.validateAndGetSecurePath(validProviderId);
    > 290 |       expect(result).toBe(`${mockUserDataPath}/secure_api_keys/openai.json`);
          |                      ^
      291 |     });
      292 |   });
      293 | });

      at Object.<anonymous> (src/main/ApiKeyServiceMain.test.ts:290:22)

PASS src/common/providers/OpenAIProvider.test.ts
PASS src/common/providers/AnthropicProvider.test.ts
PASS src/common/errors.test.ts

Test Suites: 1 failed, 9 passed, 10 total
Tests:       6 failed, 108 passed, 114 total
Snapshots:   0 total
Time:        9.025 s
Ran all test suites.
Error: Process completed with exit code 1.
